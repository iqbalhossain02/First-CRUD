<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6" crossorigin="anonymous">
</head>

<body class="text-center my-5">
    <h1 class="my-3">look mom, I have mongo database</h1>
    <form action="/addProduct" method="post">
        <input type="text" placeholder="Product" name="name"><br /><br />
        <input type="text" placeholder="Price" name="price"><br /><br />
        <input type="text" placeholder="Quantity" name="quantity"><br /><br />
        <input type="submit" value="Add Product" />
    </form>

    <!-- Read Product -->
    <div id="products" class="my-5">

    </div>


    <!-- Update Product -->
    <div id="update">

    </div>


    <!-- <script src="./script.js"></script>  did not work -->
    <script>

        // Read File
        function loadAllProducts() {
            fetch('http://localhost:3000/products')
                .then(response => response.json())
                .then(products => {
                    // console.log(products)
                    const container = document.getElementById('products');
                    container.innerHTML = ''; // because ,, container has add a new product but container did not remove previous product
                    products.forEach(product => {
                        const item = document.createElement('p');
                        item.innerHTML = `Name: ${product.name} Price: ${product.price} Quantity: ${product.quantity}
                            <button onclick="loadProduct('${product._id}')">Update</button>
                            <button onclick="deleteProduct(event,'${product._id}')">Delete</button>
                        `;
                        container.appendChild(item);
                    });
                });
        }
        loadAllProducts();


        // Update client products
        const loadProduct = (id) => {
            fetch(`http://localhost:3000/product/${id}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data)
                    const update = document.getElementById('update');
                    update.innerHTML = `
                        <h3>Update: ${data._id}</h3>
                        Price: <input type="text" value="${data.price}" id="price" />
                        <br/>
                        Quantity: <input type="text" value="${data.quantity}" id="quantity" />
                        <br/>
                        <button onclick="updateProduct('${data._id}')" type="submit" class="btn btn-primary my-3">Submit</button>

                    `;
                })
                .catch(error => console.log(error))
        }


        // update method or handler
        const updateProduct = (id) => {
            // console.log('Updating')
            const price = document.getElementById('price').value;
            const quantity = document.getElementById('quantity').value;
            const product = { id, price, quantity };

            fetch(`http://localhost:3000/update/${id}`, {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(product)
            })
                .then(response => response.json())
                .then(result => {
                    // console.log('Updated')
                    if (result) {
                        loadAllProducts();  // Reload all page
                        const update = document.getElementById('update');   // update all this process then display none 
                        update.innerHTML = '';
                    }
                })
                .catch(err => console.log(err))
        }

        // Delete client Product
        const deleteProduct = (event, id) => {
            console.log(event.target.parentNode)
            fetch(`http://localhost:3000/delete/${id}`, {
                method: 'DELETE'
            })
                .then((res) => res.json())
                .then((result) => {
                    // console.log(`Delete successfully`)
                    if (result) {
                        event.target.parentNode.style.display = 'none';
                    }
                })
                .catch(err => console.error(err))
        };
    </script>
</body>

</html>